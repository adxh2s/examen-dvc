[project]
name = "examen-dvc"
version = "0.1.0"
description = "ML Regression Pipeline with DVC and DagHub"
requires-python = ">=3.11"
authors = [
    {name = "SÃ©bastien Mouton", email = "adx.h2s@gmail.com"}
]
readme = "README.md"
license = {text = "MIT"}

dependencies = [
    # Data manipulation
    "pandas>=2.1.0",
    "numpy>=1.26.0",
    
    # Machine Learning
    "scikit-learn>=1.3.0",
    
    # Model persistence
    "joblib>=1.3.0",
    
    # Configuration
    "pyyaml>=6.0.1",
    
    # DVC and versioning
    "dvc>=3.30.0",
    "dvc-s3>=3.0.1",
    
    # DagHub integration
    "dagshub>=0.3.0",
]

[project.optional-dependencies]
dev = [
    # Code quality
    "pip>=23.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.7.0",
    
    # Testing
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    
    # Notebooks
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
    "matplotlib>=3.8.0",
    "seaborn>=0.13.0",
]

docker = [
    # Docker-specific dependencies
    "gunicorn>=21.2.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# ============================================
# Hatchling Build Configuration
# ============================================
[tool.hatch.build.targets.wheel]
packages = ["src"]

# ============================================
# Ruff Configuration
# ============================================
[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "C",      # flake8-comprehensions
    "B",      # flake8-bugbear
    "UP",     # pyupgrade
    "N",      # pep8-naming
    "D",      # pydocstyle
]

ignore = [
    "D100",   # Missing docstring in public module
    "D104",   # Missing docstring in public package
    "ANN101", # Missing type annotation for self
    "ANN102", # Missing type annotation for cls
    "COM812", # Trailing comma missing (conflicts with formatter)
    "ISC001", # Implicit string concatenation (conflicts with formatter)
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "D103"]
"tests/*" = ["S101", "PLR2004", "ANN"]

# ============================================
# Pytest Configuration
# ============================================
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = "-v --cov=src --cov-report=term-missing --cov-report=html"

# ============================================
# MyPy Configuration
# ============================================
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "sklearn.*",
    "joblib.*",
    "yaml.*",
    "dagshub.*",
]
ignore_missing_imports = true

# ============================================
# Black Configuration
# ============================================
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

# ============================================
# Isort Configuration
# ============================================
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
